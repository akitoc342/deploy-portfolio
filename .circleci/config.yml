version: 2.1
orbs:
  python: circleci/python@2.0.3
  aws-cli: circleci/aws-cli@3.1.4
  ansible-playbook: orbss/ansible-playbook@0.0.5
  ruby: circleci/ruby@2.0.0

jobs:
  cfn-lint:
    executor: python/default
    steps:
      - checkout
      - run: pip install cfn-lint
      - run:
          name: run cfn-lint
          command: |
            cfn-lint -i W3002 -t cloudformation/*.yml
  executeCloudFormation:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
      - run: 
          name: deploy Cloudformation
          command: |
            set -x
            aws cloudformation deploy --template cloudformation/lecture10VPC.yml --stack-name VPCtest
            aws cloudformation deploy --template cloudformation/lecture10SG.yml --stack-name SGtest
            aws cloudformation deploy --template cloudformation/lecture10EC2.yml --stack-name EC2test2
      - run: 
          name: set environment variable
          command: |
            set -x
            echo export EC2INSTANCEID="$(aws cloudformation describe-stacks --stack-name EC2test2 | jq -r '.Stacks[].Outputs[] | select(.OutputKey == "InstanceId") | .OutputValue')" >> $BASH_ENV
            source $BASH_ENV
      - run: |
          cp $BASH_ENV bash.env
      - persist_to_workspace:
          root: .
          paths:
            - bash.env
      
  executeAnsible:
    executor: ansible-playbook/default
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - 66:73:7c:32:df:2a:c0:21:90:ab:eb:09:27:28:a7:50
      - ansible-playbook/install:
          version: '2.10.7'
      - run: 
          name: vaultpass setting
          command: |
            echo "$ANSIBLE_VAULT_PASSWORD" > env.txt
      - run: 
          name: ACCESS KEY setting
          command: |
            set -x
            echo export ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID >> $BASH_ENV
            echo export SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY >> $BASH_ENV
            source $BASH_ENV
    

  executeServerspec:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - ruby/install:
          version: '3.1.2'
      - run:
          name: executeServerspec
          command: |
            cd serverSpec
            gem install bundler
            gem install serverspec
            gem install rake
            gem install ed25519
            gem install bcrypt_pbkdf
            rake spec

  createAMI:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: |
          cat bash.env >> $BASH_ENV
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
      - run: 
          name: create AMI
          command: |
            aws ec2 create-image --instance-id $EC2INSTANCEID --name myFirstAMIImag
            sleep 300

workflows:
  raisetech:
    jobs:
      - cfn-lint
      - executeCloudFormation:
          requires:
            - cfn-lint
      - executeAnsible:
          requires:
            - executeCloudFormation
      - executeServerspec:
          requires:
            - executeAnsible
      - createAMI:
          requires:
            - executeServerspec